{
  "root": true,
  "parserOptions": {
    "ecmaVersion": 2021,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "env": {
    "browser": true,
    "node": true,
    "es2021": true
  },
  "extends": ["next", "next/core-web-vitals", "prettier", "plugin:prettier/recommended"],
  "plugins": ["prettier"],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "jsxSingleQuote": true,
        "printWidth": 100,
        "bracketSameL1ine": false
      }
    ]
  }
}

// {
//   "$schema": "https://json.schemastore.org/eslintrc",
//   "root": true,
//   "env": {
//     "browser": true,
//     "commonjs": true,
//     "es6": true,
//     "node": true
//   },
//   "plugins": [
//     "@typescript-eslint",
//     "tailwindcss",
//     "simple-import-sort",
//     "unused-imports",
//     "prettier"
//   ],
//   "extends": [
//     "eslint:recommended",
//     "next",
//     "next/core-web-vitals",
//     "plugin:@typescript-eslint/recommended",
//     "plugin:tailwindcss/recommended",
//     "plugin:prettier/recommended",
//     "prettier"
//   ],
//   "parser": "@typescript-eslint/parser",
//   "parserOptions": {
//     "ecmaVersion": 2018,
//     "sourceType": "module",
//     "ecmaFeatures": {
//       "jsx": true,
//       "tsx": true
//     }
//   },
//   "settings": {
//     "tailwindcss": {
//       "callees": ["cn"],
//       "config": "tailwind.config.js"
//     },
//     "next": {
//       "rootDir": ["./"]
//     }
//   },
//   "ignorePatterns": ["node_modules/", ".next/*", "build", "dist", "public"],
//   "rules": {
//     "prefer-const": "error",
//     "react/display-name": "off",
//     "react/react-in-jsx-scope": 0,
//     "react/prefer-stateless-function": 0,
//     "react/jsx-filename-extension": 0,
//     "react/jsx-one-expression-per-line": 0,
//     "no-nested-ternary": 0,
//     "no-unused-vars": "off",
//     "no-undef": "off",
//     "no-empty-interface": "off",
//     "/no-useless-escape": "off",
//     //#region  //*=========== Import Sort ===========
//     "simple-import-sort/exports": "warn",
//     "simple-import-sort/imports": [
//       "warn",
//       {
//         "groups": [
//           // ext library & side effect imports
//           ["^@?\\w", "^\\u0000"],
//           // {s}css files
//           ["^.+\\.s?css$"],
//           // Lib and hooks
//           ["^@/lib, ^@/hooks"],
//           // static data
//           ["^@/data"],
//           // components
//           ["^@/components", "^@/container"],
//           // zustand store
//           ["^@/store"],
//           // Other imports
//           ["^@/"],
//           // relative paths up until 3 level
//           [
//             "^\\./?$",
//             "^\\.(?!/?$)",
//             "^\\.\\./?$",
//             "^\\.\\.(?!/?$)",
//             "^\\.\\./\\.\\./?$",
//             "^\\.\\./\\.\\.(?!/?$)",
//             "^\\.\\./\\.\\./\\.\\./?$",
//             "^\\.\\./\\.\\./\\.\\.(?!/?$)"
//           ],
//           ["^@/types"],
//           // other that didn't fit in
//           ["^"]
//         ]
//       }
//     ],
//     //#end region  //*======== Import Sort ===========
//     "@typescript-eslint/no-unused-vars": "error",
//     "@typescript-eslint/no-explicit-any": "error",
//     "@typescript-eslint/no-empty-interface": "off",
//     "prettier/prettier": [
//       "error",
//       {
//         "endOfLine": "auto",
//         "useTabs": false
//       }
//     ],
//     "indent": [
//       "error",
//       2,
//       {
//         "ignoredNodes": ["CallExpression > FunctionExpression.callee > BlockStatement.body"],
//         "SwitchCase": 1,
//         "VariableDeclarator": 2,
//         "offsetTernaryExpressions": true
//       }
//     ]
//   },
//   "overrides": [
//     {
//       "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
//       "parser": "@typescript-eslint/parser",
//       "rules": {
//         "@typescript-eslint/explicit-function-return-type": "off",
//         "@typescript-eslint/no-unused-vars": "off",
//         "@typescript-eslint/no-empty-interface": "off"
//       }
//     }
//   ]
// }
